{"version":3,"sources":["Assets/avatar1.png","../../src/features/tilt/defaultProps.ts","../../src/react-parallax-tilt/defaultProps.ts","../../src/features/glare/defaultProps.ts","../../src/common/utils.ts","../../src/features/tilt/Tilt.ts","../../src/features/glare/Glare.ts","../../src/react-parallax-tilt/ReactParallaxTilt.tsx","components/Home/HomeAbout.js"],"names":["defaultProps","scale","perspective","flipVertically","flipHorizontally","reset","transitionEasing","transitionSpeed","trackOnWindow","gyroscope","tiltEnable","tiltReverse","tiltAngleXInitial","tiltAngleYInitial","tiltMaxAngleX","tiltMaxAngleY","tiltAxis","tiltAngleXManual","tiltAngleYManual","glareEnable","glareMaxOpacity","glareColor","glarePosition","glareReverse","setTransition","element","property","duration","timing","timeoutId","r","clearTimeout","style","transition","setTimeout","constrainToRange","value","rangeMin","rangeMax","Math","min","max","e","this","wrapperElClientPosition","props","_this","updateTilt","updateTiltManualInput","updateTiltReverse","updateTiltLimits","yPercentage","tiltAngleX","tiltAngleY","xPercentage","tiltAngleXPercentage","tiltAngleYPercentage","transform","wrapperElSize","width","height","glareSize","calculateGlareSize","glareEl","updateAngle","updateOpacity","rad2Deg","PI","glareAngle","atan2","glareOpacityFactor","flipVerticallyFactor","flipHorizontallyFactor","hypot","glareOpacityFactorRemoveNegative","glareOpacity","opacity","toString","background","glareWrapperEl","document","createElement","appendChild","className","styleGlare","position","top","left","transform-origin","pointer-events","Object","assign","overflow","__extends","node","size","clientPosition","x","y","transitionTimeoutId","updateAnimationId","childrenImgsCounter","childrenImgsLength","a","window","DeviceOrientationEvent","DeviceMotionEvent","requestPermission","addEventListener","onMove","console","error","err_1","imgs","Array","from","wrapperEl","getElementsByTagName","length","forEach","img","complete","allImagesLoaded","setSize","setWrapperElSize","glare","event","cancelAnimationFrame","processInput","update","type","requestAnimationFrame","renderFrame","willChange","onEnter","mainLoop","emitOnMove","onLeave","autoResetEvent","CustomEvent","pageX","pageY","touches","processInputDeviceOrientation","gamma","beta","angleY","eventType","updateClientInput","tilt","updateFlip","updateTiltAnglesPercentage","xTemp","yTemp","innerHeight","innerWidth","_c","_d","resetWrapperElTransform","renderPerspective","render","renderScale","ReactParallaxTilt","loadWrapperAndChildElements","Tilt","initGlare","addEventListeners","autoreset","initialEvent","removeEventListeners","addDeviceOrientationEventListener","removeEventListener","rect","getBoundingClientRect","offsetWidth","offsetHeight","scrollX","scrollY","Glare","_a","React","ref","el","onMouseEnter","onMouseMove","onMouseLeave","onTouchStart","onTouchMove","onTouchEnd","HomeAbout","Container","fluid","id","Row","Col","md","fontSize","src","myImg","alt"],"mappings":"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","file":"static/js/18.f87a81d2.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/avatar1.1a78529a.png\";","import { TiltProps } from './types';\n\nexport const defaultTiltProps: TiltProps = {\n  tiltEnable: true,\n  tiltReverse: false,\n  tiltAngleXInitial: 0,\n  tiltAngleYInitial: 0,\n  tiltMaxAngleX: 20,\n  tiltMaxAngleY: 20,\n  tiltAxis: null,\n  tiltAngleXManual: null,\n  tiltAngleYManual: null,\n};\n","import { Props } from './types';\nimport { defaultTiltProps } from '../features/tilt/defaultProps';\nimport { defaultGlareProps } from '../features/glare/defaultProps';\n\nexport const defaultProps: Props = {\n  scale: 1,\n  perspective: 1000,\n  flipVertically: false,\n  flipHorizontally: false,\n  reset: true,\n  transitionEasing: 'cubic-bezier(.03,.98,.52,.99)',\n  transitionSpeed: 400,\n  trackOnWindow: false,\n  gyroscope: false,\n  ...defaultTiltProps,\n  ...defaultGlareProps,\n};\n","import { GlareProps } from './types';\n\nexport const defaultGlareProps: GlareProps = {\n  glareEnable: false,\n  glareMaxOpacity: 0.7,\n  glareColor: '#ffffff',\n  glarePosition: 'bottom',\n  glareReverse: false,\n};\n","export function setTransition<T extends HTMLElement>(\n  element: T,\n  property: string,\n  duration: number,\n  timing: string,\n  timeoutId: number | null = null,\n): number {\n  if (timeoutId) {\n    clearTimeout(timeoutId);\n  }\n  element.style.transition = `${property} ${duration}ms ${timing}`;\n  return setTimeout(() => {\n    element.style.transition = '';\n  }, duration) as any;\n}\n\nexport function constrainToRange(value: number, rangeMin: number, rangeMax: number): number {\n  return Math.min(Math.max(value, rangeMin), rangeMax);\n}\n","import { TiltProps } from './types';\nimport { constrainToRange } from '../../common/utils';\nimport { ClientPosition } from '../../common/types';\nimport { IStyle } from '../../common/IStyle';\n\nconst TILT_ANGLE_CONSTRAINT = 90;\n\nexport class Tilt<T extends HTMLElement> implements IStyle {\n  public glareAngle: number = 0;\n  public glareOpacity: number = 0;\n\n  public transitionTimeoutId: number | undefined;\n\n  public tiltAngleX: number = 0;\n  public tiltAngleY: number = 0;\n  public tiltAngleXPercentage: number = 0;\n  public tiltAngleYPercentage: number = 0;\n\n  public update = (wrapperElClientPosition: ClientPosition, props: TiltProps): void => {\n    this.updateTilt(wrapperElClientPosition, props);\n    this.updateTiltManualInput(wrapperElClientPosition, props);\n    this.updateTiltReverse(props);\n    this.updateTiltLimits(props);\n  };\n\n  private updateTilt = (wrapperElClientPosition: ClientPosition, props: TiltProps): void => {\n    const { xPercentage, yPercentage } = wrapperElClientPosition;\n    const { tiltMaxAngleX, tiltMaxAngleY } = props;\n\n    // Calculate tilt angle x/y\n    const tiltTowardMouse = -1;\n    this.tiltAngleX = (xPercentage! * tiltMaxAngleX!) / 100;\n    this.tiltAngleY = ((yPercentage! * tiltMaxAngleY!) / 100) * tiltTowardMouse;\n  };\n\n  private updateTiltManualInput = (wrapperElClientPosition: ClientPosition, props: TiltProps): void => {\n    const { tiltAngleXManual, tiltAngleYManual, tiltMaxAngleX, tiltMaxAngleY } = props;\n    // if manual input prop is passed, ignore other inputs\n    if (tiltAngleXManual !== null || tiltAngleYManual !== null) {\n      this.tiltAngleX = tiltAngleXManual !== null ? tiltAngleXManual! : 0;\n      this.tiltAngleY = tiltAngleYManual !== null ? tiltAngleYManual! : 0;\n      wrapperElClientPosition.xPercentage = (100 * this.tiltAngleX) / tiltMaxAngleX!;\n      wrapperElClientPosition.yPercentage = (100 * this.tiltAngleY) / tiltMaxAngleY!;\n    }\n  };\n\n  private updateTiltReverse = (props: TiltProps): void => {\n    const tiltReverse = props.tiltReverse ? -1 : 1;\n    this.tiltAngleX = tiltReverse * this.tiltAngleX;\n    this.tiltAngleY = tiltReverse * this.tiltAngleY;\n  };\n\n  private updateTiltLimits = (props: TiltProps): void => {\n    const { tiltAxis } = props;\n\n    // constrain tilt angles\n    this.tiltAngleX = constrainToRange(this.tiltAngleX, -TILT_ANGLE_CONSTRAINT, TILT_ANGLE_CONSTRAINT);\n    this.tiltAngleY = constrainToRange(this.tiltAngleY, -TILT_ANGLE_CONSTRAINT, TILT_ANGLE_CONSTRAINT);\n\n    // disable x/y axis for tilting\n    if (tiltAxis) {\n      this.tiltAngleX = tiltAxis === 'x' ? this.tiltAngleX : 0;\n      this.tiltAngleY = tiltAxis === 'y' ? this.tiltAngleY : 0;\n    }\n  };\n\n  public updateTiltAnglesPercentage = (props: TiltProps): void => {\n    const { tiltMaxAngleX, tiltMaxAngleY } = props;\n\n    this.tiltAngleXPercentage = (this.tiltAngleX / tiltMaxAngleX!) * 100;\n    this.tiltAngleYPercentage = (this.tiltAngleY / tiltMaxAngleY!) * 100;\n  };\n\n  public render = (element: T): void => {\n    element.style.transform += `rotateX(${this.tiltAngleX}deg) rotateY(${this.tiltAngleY}deg) `;\n  };\n}\n","import { GlareProps, GlareSize } from './types';\nimport { constrainToRange } from '../../common/utils';\nimport { ElementSizePosition, ClientPosition } from '../../common/types';\nimport { IStyle } from '../../common/IStyle';\n\nconst GLARE_EL_SIZE_FACTOR = 2;\n\nexport class Glare implements IStyle {\n  public glareWrapperEl: HTMLDivElement;\n  public glareEl: HTMLDivElement;\n\n  public glareAngle: number = 0;\n  public glareOpacity: number = 0;\n\n  public transitionTimeoutId: number | undefined;\n\n  constructor(wrapperElSize: ElementSizePosition) {\n    this.glareWrapperEl = document.createElement('div');\n    this.glareEl = document.createElement('div');\n    this.glareWrapperEl.appendChild(this.glareEl);\n    this.glareWrapperEl.className = 'glare-wrapper';\n    this.glareEl.className = 'glare';\n\n    const styleGlareWrapper = {\n      position: 'absolute',\n      top: '0',\n      left: '0',\n      width: '100%',\n      height: '100%',\n      overflow: 'hidden',\n    };\n\n    const glareSize = this.calculateGlareSize(wrapperElSize);\n    const styleGlare = {\n      position: 'absolute',\n      top: '50%',\n      left: '50%',\n      'transform-origin': '0% 0%',\n      'pointer-events': 'none',\n      width: `${glareSize.width}px`,\n      height: `${glareSize.height}px`,\n    };\n\n    Object.assign(this.glareWrapperEl.style, styleGlareWrapper);\n    Object.assign(this.glareEl.style, styleGlare);\n  }\n\n  private calculateGlareSize = (wrapperElSize: ElementSizePosition): GlareSize => {\n    return {\n      width: wrapperElSize.width! * GLARE_EL_SIZE_FACTOR,\n      height: wrapperElSize.height! * GLARE_EL_SIZE_FACTOR,\n    };\n  };\n\n  public setSize = (wrapperElSize: ElementSizePosition): void => {\n    const glareSize = this.calculateGlareSize(wrapperElSize);\n    this.glareEl.style.width = `${glareSize.width}px`;\n    this.glareEl.style.height = `${glareSize.height}px`;\n  };\n\n  public update = (\n    wrapperElClientPosition: ClientPosition,\n    props: GlareProps,\n    flipVertically: boolean,\n    flipHorizontally: boolean,\n  ): void => {\n    this.updateAngle(wrapperElClientPosition, props.glareReverse!);\n    this.updateOpacity(wrapperElClientPosition, props, flipVertically, flipHorizontally);\n  };\n\n  private updateAngle = (wrapperElClientPosition: ClientPosition, glareReverse: boolean): void => {\n    const { xPercentage, yPercentage } = wrapperElClientPosition;\n\n    const rad2Deg = 180 / Math.PI;\n    // top 0°, right +90°, bottom -+180°, left -90°\n    const glareAngle: number = xPercentage ? Math.atan2(yPercentage, -xPercentage) * rad2Deg : 0;\n\n    const addGlareAngle: number = glareReverse ? 180 : 0;\n    this.glareAngle = glareAngle - addGlareAngle;\n  };\n\n  private updateOpacity = (\n    wrapperElClientPosition: ClientPosition,\n    props: GlareProps,\n    flipVertically: boolean,\n    flipHorizontally: boolean,\n  ): void => {\n    const { xPercentage, yPercentage } = wrapperElClientPosition;\n    const { glarePosition, glareReverse, glareMaxOpacity } = props;\n\n    const flipVerticallyFactor = flipVertically ? -1 : 1;\n    const flipHorizontallyFactor = flipHorizontally ? -1 : 1;\n\n    let glareOpacityFactor: number;\n    switch (glarePosition) {\n      case 'top':\n        glareOpacityFactor = -xPercentage! * flipVerticallyFactor;\n        break;\n      case 'right':\n        glareOpacityFactor = yPercentage! * flipHorizontallyFactor;\n        break;\n      case 'bottom':\n        glareOpacityFactor = xPercentage! * flipVerticallyFactor;\n        break;\n      case 'left':\n        glareOpacityFactor = -yPercentage! * flipHorizontallyFactor;\n        break;\n      case 'all':\n        glareOpacityFactor = Math.hypot(xPercentage, yPercentage);\n        break;\n      default:\n        glareOpacityFactor = xPercentage! * flipVerticallyFactor;\n    }\n\n    glareOpacityFactor = glareReverse ? -glareOpacityFactor : glareOpacityFactor;\n    const glareOpacityFactorRemoveNegative: number = constrainToRange(glareOpacityFactor, 0, 100);\n    this.glareOpacity = (glareOpacityFactorRemoveNegative * glareMaxOpacity!) / 100;\n  };\n\n  public render = (props: GlareProps): void => {\n    const { glareColor } = props;\n    this.glareEl.style.transform = `rotate(${this.glareAngle}deg) translate(-50%, -50%)`;\n    this.glareEl.style.opacity = this.glareOpacity.toString();\n\n    const linearGradient: string = `linear-gradient(0deg, rgba(255,255,255,0) 0%, ${glareColor} 100%)`;\n    this.glareEl.style.background = linearGradient;\n  };\n}\n","import React, { PureComponent, MouseEvent, TouchEvent } from 'react';\n\nimport { Props, SupportedEvent, EventType, CustomEventType, WrapperElement } from './types';\nimport { defaultProps } from './defaultProps';\nimport { Tilt } from '../features/tilt/Tilt';\nimport { Glare } from '../features/glare/Glare';\nimport { setTransition, constrainToRange } from '../common/utils';\n\nclass ReactParallaxTilt extends PureComponent<Props> {\n  public static defaultProps = defaultProps;\n  private wrapperEl: WrapperElement<HTMLDivElement> = {\n    node: null,\n    size: {\n      width: 0,\n      height: 0,\n      left: 0,\n      top: 0,\n    },\n    clientPosition: {\n      x: null,\n      y: null,\n      xPercentage: 0,\n      yPercentage: 0,\n    },\n    transitionTimeoutId: undefined,\n    updateAnimationId: null,\n    childrenImgsCounter: 0,\n    childrenImgsLength: 0,\n    scale: 1,\n  };\n  private tilt: Tilt<HTMLDivElement> | null = null;\n  private glare: Glare | null = null;\n\n  public componentDidMount() {\n    this.loadWrapperAndChildElements();\n    this.tilt = new Tilt<HTMLDivElement>();\n    this.initGlare();\n    this.addEventListeners();\n    const autoreset = new CustomEvent<CustomEventType>('autoreset' as CustomEventType);\n    this.mainLoop(autoreset);\n    const initialEvent = new CustomEvent<CustomEventType>('initial' as CustomEventType);\n    this.emitOnMove(initialEvent);\n  }\n\n  public componentWillUnmount() {\n    clearTimeout(this.wrapperEl.transitionTimeoutId);\n    if (this.wrapperEl.updateAnimationId !== null) {\n      cancelAnimationFrame(this.wrapperEl.updateAnimationId);\n    }\n    this.removeEventListeners();\n  }\n\n  private addEventListeners() {\n    const { trackOnWindow, gyroscope } = this.props;\n\n    window.addEventListener('resize', this.setSize);\n\n    if (trackOnWindow) {\n      window.addEventListener('mouseenter', this.onEnter);\n      window.addEventListener('mousemove', this.onMove);\n      window.addEventListener('mouseout', this.onLeave);\n      window.addEventListener('touchstart', this.onEnter);\n      window.addEventListener('touchmove', this.onMove);\n      window.addEventListener('touchend', this.onLeave);\n    }\n\n    if (gyroscope) {\n      this.addDeviceOrientationEventListener();\n    }\n  }\n\n  /* istanbul ignore next */\n  private addDeviceOrientationEventListener = async () => {\n    if (!window.DeviceOrientationEvent) {\n      if (!process.env.NODE_ENV || process.env.NODE_ENV === 'development') {\n        console.warn(\"Browser doesn't support Device Orientation.\");\n      }\n      return;\n    }\n\n    const iOS13OrHigherDevice = typeof DeviceMotionEvent.requestPermission === 'function';\n    if (iOS13OrHigherDevice) {\n      try {\n        const response = await DeviceOrientationEvent.requestPermission();\n        if (response === 'granted') {\n          window.addEventListener('deviceorientation', this.onMove);\n        }\n        return;\n      } catch (err) {\n        console.error(err);\n        return;\n      }\n    }\n\n    window.addEventListener('deviceorientation', this.onMove);\n  };\n\n  private removeEventListeners() {\n    const { trackOnWindow, gyroscope } = this.props;\n\n    window.removeEventListener('resize', this.setSize);\n\n    if (trackOnWindow) {\n      window.removeEventListener('mouseenter', this.onEnter);\n      window.removeEventListener('mousemove', this.onMove);\n      window.removeEventListener('mouseout', this.onLeave);\n      window.removeEventListener('touchstart', this.onEnter);\n      window.removeEventListener('touchmove', this.onMove);\n      window.removeEventListener('touchend', this.onLeave);\n    }\n\n    // jest - instance of DeviceOrientationEvent not possible\n    /* istanbul ignore next */\n    if (gyroscope && window.DeviceOrientationEvent) {\n      window.removeEventListener('deviceorientation', this.onMove);\n    }\n  }\n\n  private loadWrapperAndChildElements = () => {\n    const imgs = Array.from(this.wrapperEl.node!.getElementsByTagName('img'));\n    this.wrapperEl.childrenImgsLength = imgs.length;\n    if (this.wrapperEl.childrenImgsLength === 0) {\n      this.setSize();\n      return;\n    }\n\n    imgs.forEach((img) => {\n      // jest - images are not preloaded\n      /* istanbul ignore next */\n      if (img.complete) {\n        this.allImagesLoaded();\n      } else {\n        img.addEventListener('load', this.allImagesLoaded);\n      }\n    });\n  };\n\n  public allImagesLoaded = () => {\n    this.wrapperEl.childrenImgsCounter++;\n    if (this.wrapperEl.childrenImgsCounter === this.wrapperEl.childrenImgsLength) {\n      this.setSize();\n    }\n  };\n\n  public setSize = () => {\n    this.setWrapperElSize();\n    if (this.glare) {\n      this.glare.setSize(this.wrapperEl.size);\n    }\n  };\n\n  private setWrapperElSize() {\n    const rect = this.wrapperEl.node!.getBoundingClientRect();\n    this.wrapperEl.size.width = this.wrapperEl.node!.offsetWidth;\n    this.wrapperEl.size.height = this.wrapperEl.node!.offsetHeight;\n    this.wrapperEl.size.left = rect.left + window.scrollX;\n    this.wrapperEl.size.top = rect.top + window.scrollY;\n  }\n\n  private initGlare() {\n    const { glareEnable } = this.props;\n\n    if (!glareEnable) {\n      return;\n    }\n\n    this.glare = new Glare(this.wrapperEl.size);\n    this.wrapperEl.node!.appendChild(this.glare.glareWrapperEl);\n  }\n\n  public mainLoop = (event: SupportedEvent) => {\n    if (this.wrapperEl.updateAnimationId !== null) {\n      cancelAnimationFrame(this.wrapperEl.updateAnimationId);\n    }\n    this.processInput(event);\n    this.update(event.type);\n    this.wrapperEl.updateAnimationId = requestAnimationFrame(this.renderFrame);\n  };\n\n  private onEnter = (event: SupportedEvent) => {\n    const { onEnter } = this.props;\n\n    // increase performance by notifying browser 'transform' property is just about to get changed\n    this.wrapperEl.node!.style.willChange = 'transform';\n    this.setTransition();\n\n    if (onEnter) {\n      onEnter(event.type);\n    }\n  };\n\n  private onMove = (event: SupportedEvent): void => {\n    this.mainLoop(event);\n    this.emitOnMove(event);\n  };\n\n  private emitOnMove(event: SupportedEvent) {\n    const { onMove } = this.props;\n    if (!onMove) {\n      return;\n    }\n    let glareAngle = 0;\n    let glareOpacity = 0;\n    if (this.glare) {\n      glareAngle = this.glare.glareAngle;\n      glareOpacity = this.glare.glareOpacity;\n    }\n\n    onMove(\n      this.tilt!.tiltAngleX!,\n      this.tilt!.tiltAngleY!,\n      this.tilt!.tiltAngleXPercentage!,\n      this.tilt!.tiltAngleYPercentage!,\n      glareAngle,\n      glareOpacity,\n      event.type,\n    );\n  }\n\n  private onLeave = (event: SupportedEvent) => {\n    const { onLeave } = this.props;\n    this.setTransition();\n\n    if (onLeave) {\n      onLeave(event.type);\n    }\n\n    if (this.props.reset) {\n      const autoResetEvent = new CustomEvent<CustomEventType>('autoreset' as CustomEventType);\n      this.onMove(autoResetEvent);\n    }\n  };\n\n  private processInput = (event: SupportedEvent): void => {\n    const { scale } = this.props;\n\n    switch (event.type as EventType) {\n      case 'mousemove':\n        this.wrapperEl.clientPosition.x = (event as MouseEvent).pageX;\n        this.wrapperEl.clientPosition.y = (event as MouseEvent).pageY;\n        this.wrapperEl.scale = scale!;\n        break;\n      case 'touchmove':\n        this.wrapperEl.clientPosition.x = (event as TouchEvent).touches[0].pageX;\n        this.wrapperEl.clientPosition.y = (event as TouchEvent).touches[0].pageY;\n        this.wrapperEl.scale = scale!;\n        break;\n      // jest - instance of DeviceOrientationEvent not possible\n      /* istanbul ignore next */\n      case 'deviceorientation':\n        this.processInputDeviceOrientation(event as DeviceOrientationEvent);\n        this.wrapperEl.scale = scale!;\n        break;\n      case 'autoreset':\n        const { tiltAngleXInitial, tiltAngleYInitial, tiltMaxAngleX, tiltMaxAngleY } = this.props;\n        const xPercentage = (tiltAngleXInitial! / tiltMaxAngleX!) * 100;\n        const yPercentage = (tiltAngleYInitial! / tiltMaxAngleY!) * 100;\n        this.wrapperEl.clientPosition.xPercentage = constrainToRange(xPercentage, -100, 100);\n        this.wrapperEl.clientPosition.yPercentage = constrainToRange(yPercentage, -100, 100);\n        this.wrapperEl.scale = 1;\n        break;\n    }\n  };\n\n  // jest - instance of DeviceOrientationEvent not possible\n  /* istanbul ignore next */\n  private processInputDeviceOrientation = (event: DeviceOrientationEvent): void => {\n    if (!event.gamma || !event.beta || !this.props.gyroscope) {\n      return;\n    }\n\n    const { tiltMaxAngleX, tiltMaxAngleY } = this.props;\n\n    const angleX = event.beta; // motion of the device around the x axis in degree in the range:[-180,180]\n    const angleY = event.gamma; // motion of the device around the y axis in degree in the range:[-90,90]\n\n    this.wrapperEl.clientPosition.xPercentage = (angleX! / tiltMaxAngleX!) * 100;\n    this.wrapperEl.clientPosition.yPercentage = (angleY! / tiltMaxAngleY!) * 100;\n\n    this.wrapperEl.clientPosition.xPercentage = constrainToRange(\n      this.wrapperEl.clientPosition.xPercentage,\n      -100,\n      100,\n    );\n    this.wrapperEl.clientPosition.yPercentage = constrainToRange(\n      this.wrapperEl.clientPosition.yPercentage,\n      -100,\n      100,\n    );\n  };\n\n  private update = (eventType: EventType | string): void => {\n    const { tiltEnable, flipVertically, flipHorizontally } = this.props;\n\n    this.updateClientInput(eventType);\n    if (tiltEnable) {\n      this.tilt!.update(this.wrapperEl.clientPosition, this.props);\n    }\n    this.updateFlip();\n    this.tilt!.updateTiltAnglesPercentage(this.props);\n    if (this.glare) {\n      this.glare.update(this.wrapperEl.clientPosition, this.props, flipVertically!, flipHorizontally!);\n    }\n  };\n\n  private updateClientInput = (eventType: EventType | string): void => {\n    // on 'autoreset' event - nothing to update, everything set to default already\n    // on 'deviceorientation' event - don't calculate tilt angle, retrieved from gyroscope\n    if (eventType === 'autoreset' || eventType === 'deviceorientation') {\n      return;\n    }\n\n    const { trackOnWindow } = this.props;\n\n    let xTemp;\n    let yTemp;\n    if (trackOnWindow) {\n      const { x, y } = this.wrapperEl.clientPosition;\n\n      xTemp = (y! / window.innerHeight) * 200 - 100;\n      yTemp = (x! / window.innerWidth) * 200 - 100;\n    } else {\n      const {\n        size: { width, height, left, top },\n        clientPosition: { x, y },\n      } = this.wrapperEl;\n\n      xTemp = ((y! - top!) / height!) * 200 - 100;\n      yTemp = ((x! - left!) / width!) * 200 - 100;\n    }\n\n    this.wrapperEl.clientPosition.xPercentage = constrainToRange(xTemp, -100, 100);\n    this.wrapperEl.clientPosition.yPercentage = constrainToRange(yTemp, -100, 100);\n  };\n\n  private updateFlip = (): void => {\n    const { flipVertically, flipHorizontally } = this.props;\n\n    if (flipVertically) {\n      this.tilt!.tiltAngleX += 180;\n      this.tilt!.tiltAngleY *= -1;\n    }\n    if (flipHorizontally) {\n      this.tilt!.tiltAngleY += 180;\n    }\n  };\n\n  public renderFrame = (): void => {\n    this.resetWrapperElTransform();\n\n    this.renderPerspective();\n    this.tilt!.render(this.wrapperEl.node!);\n    this.renderScale();\n    if (this.glare) {\n      this.glare.render(this.props);\n    }\n  };\n\n  private resetWrapperElTransform(): void {\n    this.wrapperEl.node!.style.transform = '';\n  }\n\n  private renderPerspective(): void {\n    const { perspective } = this.props;\n\n    this.wrapperEl.node!.style.transform += `perspective(${perspective}px) `;\n  }\n\n  private renderScale(): void {\n    const { scale } = this.wrapperEl;\n\n    this.wrapperEl.node!.style.transform += `scale3d(${scale},${scale},${scale})`;\n  }\n\n  private setTransition() {\n    const { transitionSpeed, transitionEasing } = this.props;\n\n    this.wrapperEl.transitionTimeoutId = setTransition<HTMLDivElement>(\n      this.wrapperEl.node!,\n      'all',\n      transitionSpeed!,\n      transitionEasing!,\n      this.wrapperEl.transitionTimeoutId,\n    );\n\n    if (this.glare) {\n      this.glare.transitionTimeoutId = setTransition<HTMLDivElement>(\n        this.glare.glareEl,\n        'opacity',\n        transitionSpeed!,\n        transitionEasing!,\n        this.glare.transitionTimeoutId,\n      );\n    }\n  }\n\n  public render() {\n    const { children, className, style } = this.props;\n    return (\n      <div\n        ref={(el) => (this.wrapperEl.node = el)}\n        onMouseEnter={this.onEnter}\n        onMouseMove={this.onMove}\n        onMouseLeave={this.onLeave}\n        onTouchStart={this.onEnter}\n        onTouchMove={this.onMove}\n        onTouchEnd={this.onLeave}\n        className={className}\n        style={style}\n      >\n        {children}\n      </div>\n    );\n  }\n}\n\nexport default ReactParallaxTilt;\n","import React from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport myImg from \"../../Assets/avatar1.png\";\nimport Tilt from \"react-parallax-tilt\";\n\nfunction HomeAbout() {\n  return (\n    <Container fluid className=\"home-about-section\" id=\"about\">\n      <Container>\n        <Row>\n          <Col md={8} className=\"home-about-description\">\n            <h1 style={{ fontSize: \"2.6em\" }}>\n              LET ME <span className=\"purple\"> INTRODUCE </span> MYSELF\n            </h1>\n            <p className=\"home-about-body\">\n              I fell in love with programming and I have at least learnt\n              something, I think…\n              <br />\n              <br />I am fluent in languages like\n              <i>\n                <b className=\"purple\"> C++, Javascript and Python. </b>\n              </i>\n              <br />\n              <br />\n              My field of Interests are building new &nbsp;\n              <i>\n                <b className=\"purple\">Web Technologies based projects</b> and\n                also in areas related to{\" \"}\n                <b className=\"purple\">\n                  Artificial Intelligence, Machine Learning and Natural Launguage Processing.\n                </b>\n              </i>\n              <br />\n              <br />\n            </p>\n          </Col>\n          <Col md={4} className=\"myAvtar\">\n            <Tilt>\n              <img src={myImg} className=\"img-fluid\" alt=\"avatar\" style={{width:\"200px\", height:\"200px\"}} />\n            </Tilt>\n          </Col>\n        </Row>\n      </Container>\n    </Container>\n  );\n}\nexport default HomeAbout;\n"],"sourceRoot":""}